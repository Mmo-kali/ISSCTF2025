Prajwal

> check the binary and you'll find a function called authenticate.
> look inside it as it is doing work, if you look at the disassembly, if you disassemble, look for the second var on stack as if you follow it you'd see it takes a larger amount in recv or just fuzz its you'll find the overflow would occur around 924 bytes
> if you analysed the instructions well you'd notice a 'mov eax, ebp', this means the 4 bytes after 916 are written to eax, and a quick search using objdump and grep would tell you that there is a 'call eax'
> use that to overflow the binary and gain execution 
> when in the environment you'd notice a particular lack of read/write utility binaries, use 'read [VARNAME] < flag' and the 'echo $[VARNAME]' 
